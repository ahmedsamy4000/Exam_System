// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Exam_system_App.Entities;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace Exam_system_App.Context
{
    public partial interface IDBContextProcedures
    {
        Task<int> Course_DeleteAsync(int? cid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Course_InsertAsync(string cName, int? insID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Course_SelectResult>> Course_SelectAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Course_UpdateAsync(int? cid, string cName, int? insID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CourseTopics_ReportResult>> CourseTopics_ReportAsync(int? crs_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Department_DeleteResult>> Department_DeleteAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Department_InsertResult>> Department_InsertAsync(string Dept_Name, int? Manager_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Department_SelectResult>> Department_SelectAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Department_SelectByIdResult>> Department_SelectByIdAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Department_SelectByManagerIdResult>> Department_SelectByManagerIdAsync(int? ManagerId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Department_SelectByNameResult>> Department_SelectByNameAsync(string name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Department_Students_ReportResult>> Department_Students_ReportAsync(int? dept_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Department_UpdateResult>> Department_UpdateAsync(int? id, string name, int? manager_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Department_UpdateManagerByIdResult>> Department_UpdateManagerByIdAsync(int? Dept_Id, int? Manager_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Department_UpdateNameByIdResult>> Department_UpdateNameByIdAsync(int? Dept_Id, string Dept_Name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_AnswerResult>> Exam_AnswerAsync(int? exID, int? stID, string ans1, string ans2, string ans3, string ans4, string ans5, string ans6, string ans7, string ans8, string ans9, string ans10, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Exam_AnswersAsync(DataTable t, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_CorrectionResult>> Exam_CorrectionAsync(int? Exam_ID, int? St_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_Correction1Result>> Exam_Correction1Async(int? Exam_ID, int? St_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_DeleteResult>> Exam_DeleteAsync(int? Ex_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_GenerationResult>> Exam_GenerationAsync(string courseName, int? numTF, int? numMCQ, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_InsertResult>> Exam_InsertAsync(DateOnly? Ex_date, int? Ex_duration, int? course_ID, int? Ex_Grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_Questions_DeleteResult>> Exam_Questions_DeleteAsync(int? Ex_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_Questions_InsertResult>> Exam_Questions_InsertAsync(int? Ex_id, int? Q_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_Questions_ReportResult>> Exam_Questions_ReportAsync(int? Ex_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_Questions_UpdateResult>> Exam_Questions_UpdateAsync(int? Ex_id, int? Q_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_SelectResult>> Exam_SelectAsync(int? cid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_SelectByIDResult>> Exam_SelectByIDAsync(int? exID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_UpdateResult>> Exam_UpdateAsync(int? Ex_id, DateOnly? Ex_date, int? Ex_duration, int? course_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Instructor_Courses_ReportResult>> Instructor_Courses_ReportAsync(int? ins_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Instructor_DeleteResult>> Instructor_DeleteAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Instructor_InsertResult>> Instructor_InsertAsync(string name, int? DeptId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Instructor_SelectResult>> Instructor_SelectAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Instructor_SelectByDeptIdResult>> Instructor_SelectByDeptIdAsync(int? DeptId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Instructor_SelectByIdResult>> Instructor_SelectByIdAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Instructor_SelectByNameResult>> Instructor_SelectByNameAsync(string name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Instructor_UpdateResult>> Instructor_UpdateAsync(int? id, string name, int? DeptId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Instructor_UpdateDeptIdResult>> Instructor_UpdateDeptIdAsync(int? id, int? DeptId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Instructor_UpdateNameResult>> Instructor_UpdateNameAsync(int? id, string name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InstructorChooseCourseResult>> InstructorChooseCourseAsync(int? insID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<instructorLoginResult>> instructorLoginAsync(int? id, string password, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Question_Choices_DeleteAsync(int? qid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Question_Choices_InsertAsync(int? qid, string choice, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Question_Choices_selectResult>> Question_Choices_selectAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Question_Choices_UpdateAsync(int? qid, string choice, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Question_DeleteAsync(int? qid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Question_InsertAsync(string type, int? grade, string body, string model_answer, int? cid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Question_Student_Answer_ReportResult>> Question_Student_Answer_ReportAsync(int? Exam_ID, int? St_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Question_UpdateAsync(int? qid, string type, int? grade, string body, string model_answer, int? cid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Questions_SelectResult>> Questions_SelectAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Student_Course_DeleteResult>> Student_Course_DeleteAsync(int? stid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Student_Course_InsertResult>> Student_Course_InsertAsync(int? stid, int? crsid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Student_Course_SelectResult>> Student_Course_SelectAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Student_Course_UpdateResult>> Student_Course_UpdateAsync(int? stid, int? crsid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Student_DeleteResult>> Student_DeleteAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Student_Grade_ReportResult>> Student_Grade_ReportAsync(int? stud_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Student_InsertResult>> Student_InsertAsync(string fname, string lname, string email, int? pass, int? deptid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Student_SelectResult>> Student_SelectAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Student_UpdateResult>> Student_UpdateAsync(int? id, string fname, string lname, string email, int? pass, int? deptid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StudentChooseCourseResult>> StudentChooseCourseAsync(int? sid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StudentExamQuestion_DeleteResult>> StudentExamQuestion_DeleteAsync(int? ST_ID, int? Question_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StudentExamQuestion_InsertResult>> StudentExamQuestion_InsertAsync(int? ST_ID, int? Question_ID, int? Exam_ID, string Student_Answer, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StudentExamQuestion_SelectResult>> StudentExamQuestion_SelectAsync(int? ST_ID, int? Question_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<StudentExamQuestion_UpdateResult>> StudentExamQuestion_UpdateAsync(int? ST_ID, int? Question_ID, int? Exam_ID, string Student_Answer, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<studentLoginResult>> studentLoginAsync(int? id, string password, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Topic_DeleteResult>> Topic_DeleteAsync(int? Topic_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Topic_InsertResult>> Topic_InsertAsync(int? Topic_ID, string Topic_Name, int? Crs_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Topic_SelectResult>> Topic_SelectAsync(int? Topic_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Topic_UpdateResult>> Topic_UpdateAsync(int? Topic_ID, string Topic_Name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
